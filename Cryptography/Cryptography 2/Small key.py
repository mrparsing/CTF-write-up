from Crypto.Util.number import long_to_bytes
import hashlib
from Crypto.Cipher import AES

p = 139379733354483189501227871110064527157682987958433427156390202678064149815642568826477911770307752913621426076298507790818439936280449152741721879461096492477608431936689120104356856262262510907004792117855182041421333215157243722734389759734373030448619917500336774214725967664965383449965717319942422012769
g = 141766002927079634436012416932426270195633516375074194269497658683856933939749443631920896002088564385320471756930651924877164463775158556657562652267307493472917448586968014693578189551533885711413705919878486107011929558061609254391556828943430904948541065524176574683093670163402084986719526042666437454093
pubA = 66016709400498362636875074602841729207604794529650288520206492814919780360783708766932535497512319649726274113961638853865431404545264600640090701462114753302958560839001532056864200400813840304804168459012583090289433312917793089693811381875506133051726976084529081221968387648987529391439097289229126508657
pubB = 133227005774287036263116319213286327328023826794360062545765483165358414788214818135925261563492163513299648752612241934102242044547030469122144101231822302310174491118256008699381279457737273945228911100642427945143296557018573202722398182706517728025099779057026709510256921227257159199663754440944499687527
ct_hex = "fe7d573c3f2bd0320ca5e175ca7ba52586f1da4354644b641e775fed1fddc3988a689ab5b0e5ed557093bb0c24690e75"

# Brute-force to find privB (could also do privA)
def find_private_key(g, p, pub_key, max_s):
    current = 1  # g^0
    if current == pub_key:
        return 0
    for s in range(1, max_s + 1):
        current = (current * g) % p
        if current == pub_key:
            return s
    return None

max_s = 1024  # Since s is in 0..nbits where nbits=1024

# Find privB (could choose either privA or privB)
privB = find_private_key(g, p, pubB, max_s)
if privB is None:
    print("Failed to find private key for pubB")
    exit()

# Compute shared_secret = pubA^privB mod p
shared_secret = pow(pubA, privB, p)

# Derive AES key
key = hashlib.sha256(long_to_bytes(shared_secret)).digest()[:16]

# Decrypt flag
cipher = AES.new(key, AES.MODE_ECB)
ct = bytes.fromhex(ct_hex)
pt = cipher.decrypt(ct)

print("Decrypted flag:", pt)